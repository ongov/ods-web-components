import { Component, Event, EventEmitter, h, Prop, State } from '@stencil/core';
import { v4 as uuid } from 'uuid';

@Component({
	tag: 'ontario-textarea',
	styleUrl: 'ontario-textarea.scss',
	shadow: true,
})
export class OntarioTextarea {
	/**
	 * The aria-describedBy value if the textarea has hint text associated with it.
	 */
	@Prop() describedBy?: string;

	/**
	 * The name assigned to the textarea. The name value is used to reference form data after a form is submitted.
	 */
	@Prop() name: string;

	/**
	 * The unique identifier of the textarea. If no ID is passed, one will be autogenerated.
	 */
	@Prop({ mutable: true }) textareaId?: string;

	/**
	 * Used to define whether the textarea field is required or not. If required, the value passed should be 'required'.
	 */
	@Prop({ mutable: true }) required?: boolean = false;

	/**
	 * The textarea content value.
	 */
	@Prop({ mutable: true }) value?: string | number | null = '';

	/**
	 * Emitted when the input loses focus.
	 */
	@Event() blurEvent!: EventEmitter<void>;

	/**
	 * Emitted when the input gains focus.
	 */
	@Event() focusEvent!: EventEmitter<void>;

	/**
	 * Emitted when a keyboard input occurred.
	 */
	@Event() changeEvent!: EventEmitter<KeyboardEvent>;

	@State() focused?: boolean = false;

	handleBlur = () => {
		this.focused = false;
	};

	handleFocus = () => {
		this.focused = true;
	}

	handleChange = (ev: Event) => {
		const textarea = ev.target as HTMLInputElement | null;

		if (textarea) {
			this.value = textarea.value ?? '';
		}

		this.changeEvent.emit(ev as KeyboardEvent);
	};

	public getId(): string {
		return this.textareaId ?? (this.textareaId = uuid());
	}

	private getValue(): string | number {
		return this.value ?? '';
	}

	render() {
		return (
			<textarea
				aria-describedby={this.describedBy}
				class="ontario-textarea"
				id={this.getId()}
				name={this.name}
				onBlur={this.handleBlur}
				onFocus={this.handleFocus}
				onInput={this.handleChange}
				required={this.required}
				value={this.getValue()}
			></textarea>
		);
	}
}
