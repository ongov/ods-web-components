/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface OntarioButton {
        /**
          * Overrides the default value of the `aria-label` HTML attribute.
         */
        "ariaLabel"?: string;
        /**
          * The unique identifier of the button
         */
        "buttonId"?: string;
        /**
          * The native HTML button type the button should use.
         */
        "htmlType"?: 'button' | 'reset' | 'submit';
        /**
          * Text to be displayed within the button. This will override the text provided through the Element Content.
          * @example <ontario-button label="Label Text">Text</ontario-button>  The resulting button will have the label `"Label Text"`.
         */
        "label"?: string;
        /**
          * The type of button to render.
         */
        "type"?: 'primary' | 'secondary' | 'tertiary';
    }
    interface OntarioHintText {
        /**
          * Text to display as the hint text statement.  Setting the hint can be done using the element content or setting the this property.  This property will take precedence.
          * @example <ontario-hint-text hint="Override Hint Text">Hint Text</ontario-button>  The resulting hint text will display `"Override Hint Text"`.
         */
        "hint": string;
        /**
          * Used to used to establish a relationship between hint text content and elements using aria-describedby.
         */
        "hintId"?: string;
    }
    interface OntarioIconAccount {
        "color": string;
    }
    interface OntarioIconAttach {
        "color": string;
    }
    interface OntarioIconBookmarkOff {
        "color": string;
    }
    interface OntarioIconBookmarkOn {
        "color": string;
    }
    interface OntarioIconCalendar {
        "color": string;
    }
    interface OntarioIconCamera {
        "color": string;
    }
    interface OntarioIconClock {
        "color": string;
    }
    interface OntarioIconCloud {
        "color": string;
    }
    interface OntarioIconDelete {
        "color": string;
    }
    interface OntarioIconDocument {
        "color": string;
    }
    interface OntarioIconDownload {
        "color": string;
    }
    interface OntarioIconEdit {
        "color": string;
    }
    interface OntarioIconExport {
        "color": string;
    }
    interface OntarioIconFacebook {
        "color": string;
    }
    interface OntarioIconFacebookAlt {
        "color": string;
    }
    interface OntarioIconFavouriteOff {
        "color": string;
    }
    interface OntarioIconFavouriteOn {
        "color": string;
    }
    interface OntarioIconFilter {
        "color": string;
    }
    interface OntarioIconFlickr {
        "color": string;
    }
    interface OntarioIconGrid {
        "color": string;
    }
    interface OntarioIconInstagram {
        "color": string;
    }
    interface OntarioIconInteracEn {
    }
    interface OntarioIconInteracEnAlt {
    }
    interface OntarioIconInteracFr {
    }
    interface OntarioIconInteracFrAlt {
    }
    interface OntarioIconLinkedin {
        "color": string;
    }
    interface OntarioIconLinkedinAlt {
        "color": string;
    }
    interface OntarioIconList {
        "color": string;
    }
    interface OntarioIconLiveChat {
        "color": string;
    }
    interface OntarioIconLocationOff {
        "color": string;
    }
    interface OntarioIconLocationOn {
        "color": string;
    }
    interface OntarioIconLockOff {
        "color": string;
    }
    interface OntarioIconLockOn {
        "color": string;
    }
    interface OntarioIconMap {
        "color": string;
    }
    interface OntarioIconMastercard {
        "color": string;
    }
    interface OntarioIconMastercardAlt {
        "color": string;
    }
    interface OntarioIconMediaFastForward {
        "color": string;
    }
    interface OntarioIconMediaFastRewind {
        "color": string;
    }
    interface OntarioIconMediaPause {
        "color": string;
    }
    interface OntarioIconMediaPlay {
        "color": string;
    }
    interface OntarioIconMediaStop {
        "color": string;
    }
    interface OntarioIconMicrophoneOff {
        "color": string;
    }
    interface OntarioIconMicrophoneOn {
        "color": string;
    }
    interface OntarioIconMoreVertical {
        "color": string;
    }
    interface OntarioIconNext {
        "color": string;
    }
    interface OntarioIconNotification {
        "color": string;
    }
    interface OntarioIconPasswordHide {
        "color": string;
    }
    interface OntarioIconPasswordShow {
        "color": string;
    }
    interface OntarioIconPhoto {
        "color": string;
    }
    interface OntarioIconPinLocationOff {
        "color": string;
    }
    interface OntarioIconPinLocationOn {
        "color": string;
    }
    interface OntarioIconPrevious {
        "color": string;
    }
    interface OntarioIconPrint {
        "color": string;
    }
    interface OntarioIconReplay {
        "color": string;
    }
    interface OntarioIconRssFeed {
        "color": string;
    }
    interface OntarioIconSave {
        "color": string;
    }
    interface OntarioIconSentiment1 {
        "color": string;
    }
    interface OntarioIconSentiment2 {
        "color": string;
    }
    interface OntarioIconSentiment3 {
        "color": string;
    }
    interface OntarioIconSentiment4 {
        "color": string;
    }
    interface OntarioIconSentiment5 {
        "color": string;
    }
    interface OntarioIconSettings {
        "color": string;
    }
    interface OntarioIconShare {
        "color": string;
    }
    interface OntarioIconSort {
        "color": string;
    }
    interface OntarioIconTag {
        "color": string;
    }
    interface OntarioIconTextMessage {
        "color": string;
    }
    interface OntarioIconTimer {
        "color": string;
    }
    interface OntarioIconTransportBicycle {
        "color": string;
    }
    interface OntarioIconTransportBus {
        "color": string;
    }
    interface OntarioIconTransportCar {
        "color": string;
    }
    interface OntarioIconTransportWalk {
        "color": string;
    }
    interface OntarioIconTwitter {
        "color": string;
    }
    interface OntarioIconTwitterAlt {
        "color": string;
    }
    interface OntarioIconVideo {
        "color": string;
    }
    interface OntarioIconVisa {
    }
    interface OntarioIconVoteDislike {
        "color": string;
    }
    interface OntarioIconVoteLike {
        "color": string;
    }
    interface OntarioIconVpnKey {
        "color": string;
    }
    interface OntarioIconWheelchair {
        "color": string;
    }
    interface OntarioIconWifi {
        "color": string;
    }
    interface OntarioInput {
        /**
          * The aria-describedBy value if the input has hint text associated with it.
         */
        "describedBy"?: string;
        /**
          * The unique identifier of the input. If no ID is passed, one will be autogenerated.
         */
        "inputId"?: string;
        /**
          * The width of the input field. If no value is assigned, it will present as the default input width.
         */
        "inputWidth"?: '2-char-width' | '3-char-width' | '4-char-width' | '5-char-width' | '7-char-width' | '10-char-width' | '20-char-width' | 'default';
        /**
          * The name assigned to the input.The name value is used to reference form data after a form is submitted.
         */
        "name": string;
        /**
          * Used to define whether the input field is required or not. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The input type value.
         */
        "type"?: 'text' | 'tel' | 'email' | 'password';
        /**
          * The input content value.
         */
        "value"?: string;
    }
    interface OntarioLabel {
        /**
          * The text to display as label. This will override the text provided through the Element Content.
          * @example <ontario-label caption="Comments" for"comments">Feedback</ontario-label>  The resulting label will show `"Comments"`.
         */
        "caption"?: string;
        /**
          * The form control with which the caption is associated.
         */
        "for": string;
        /**
          * Defines whether the input field is required. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The type of label to render.
         */
        "type": 'default' | 'large' | 'heading';
    }
    interface OntarioTextarea {
        /**
          * The aria-describedBy value if the textarea has hint text associated with it.
         */
        "describedBy"?: string;
        /**
          * The name assigned to the textarea. The name value is used to reference form data after a form is submitted.
         */
        "name": string;
        /**
          * Used to define whether the textarea field is required or not. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The unique identifier of the textarea. If no ID is passed, one will be autogenerated.
         */
        "textareaId"?: string;
        /**
          * The textarea content value.
         */
        "value"?: string;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLOntarioButtonElement extends Components.OntarioButton, HTMLStencilElement {
    }
    var HTMLOntarioButtonElement: {
        prototype: HTMLOntarioButtonElement;
        new (): HTMLOntarioButtonElement;
    };
    interface HTMLOntarioHintTextElement extends Components.OntarioHintText, HTMLStencilElement {
    }
    var HTMLOntarioHintTextElement: {
        prototype: HTMLOntarioHintTextElement;
        new (): HTMLOntarioHintTextElement;
    };
    interface HTMLOntarioIconAccountElement extends Components.OntarioIconAccount, HTMLStencilElement {
    }
    var HTMLOntarioIconAccountElement: {
        prototype: HTMLOntarioIconAccountElement;
        new (): HTMLOntarioIconAccountElement;
    };
    interface HTMLOntarioIconAttachElement extends Components.OntarioIconAttach, HTMLStencilElement {
    }
    var HTMLOntarioIconAttachElement: {
        prototype: HTMLOntarioIconAttachElement;
        new (): HTMLOntarioIconAttachElement;
    };
    interface HTMLOntarioIconBookmarkOffElement extends Components.OntarioIconBookmarkOff, HTMLStencilElement {
    }
    var HTMLOntarioIconBookmarkOffElement: {
        prototype: HTMLOntarioIconBookmarkOffElement;
        new (): HTMLOntarioIconBookmarkOffElement;
    };
    interface HTMLOntarioIconBookmarkOnElement extends Components.OntarioIconBookmarkOn, HTMLStencilElement {
    }
    var HTMLOntarioIconBookmarkOnElement: {
        prototype: HTMLOntarioIconBookmarkOnElement;
        new (): HTMLOntarioIconBookmarkOnElement;
    };
    interface HTMLOntarioIconCalendarElement extends Components.OntarioIconCalendar, HTMLStencilElement {
    }
    var HTMLOntarioIconCalendarElement: {
        prototype: HTMLOntarioIconCalendarElement;
        new (): HTMLOntarioIconCalendarElement;
    };
    interface HTMLOntarioIconCameraElement extends Components.OntarioIconCamera, HTMLStencilElement {
    }
    var HTMLOntarioIconCameraElement: {
        prototype: HTMLOntarioIconCameraElement;
        new (): HTMLOntarioIconCameraElement;
    };
    interface HTMLOntarioIconClockElement extends Components.OntarioIconClock, HTMLStencilElement {
    }
    var HTMLOntarioIconClockElement: {
        prototype: HTMLOntarioIconClockElement;
        new (): HTMLOntarioIconClockElement;
    };
    interface HTMLOntarioIconCloudElement extends Components.OntarioIconCloud, HTMLStencilElement {
    }
    var HTMLOntarioIconCloudElement: {
        prototype: HTMLOntarioIconCloudElement;
        new (): HTMLOntarioIconCloudElement;
    };
    interface HTMLOntarioIconDeleteElement extends Components.OntarioIconDelete, HTMLStencilElement {
    }
    var HTMLOntarioIconDeleteElement: {
        prototype: HTMLOntarioIconDeleteElement;
        new (): HTMLOntarioIconDeleteElement;
    };
    interface HTMLOntarioIconDocumentElement extends Components.OntarioIconDocument, HTMLStencilElement {
    }
    var HTMLOntarioIconDocumentElement: {
        prototype: HTMLOntarioIconDocumentElement;
        new (): HTMLOntarioIconDocumentElement;
    };
    interface HTMLOntarioIconDownloadElement extends Components.OntarioIconDownload, HTMLStencilElement {
    }
    var HTMLOntarioIconDownloadElement: {
        prototype: HTMLOntarioIconDownloadElement;
        new (): HTMLOntarioIconDownloadElement;
    };
    interface HTMLOntarioIconEditElement extends Components.OntarioIconEdit, HTMLStencilElement {
    }
    var HTMLOntarioIconEditElement: {
        prototype: HTMLOntarioIconEditElement;
        new (): HTMLOntarioIconEditElement;
    };
    interface HTMLOntarioIconExportElement extends Components.OntarioIconExport, HTMLStencilElement {
    }
    var HTMLOntarioIconExportElement: {
        prototype: HTMLOntarioIconExportElement;
        new (): HTMLOntarioIconExportElement;
    };
    interface HTMLOntarioIconFacebookElement extends Components.OntarioIconFacebook, HTMLStencilElement {
    }
    var HTMLOntarioIconFacebookElement: {
        prototype: HTMLOntarioIconFacebookElement;
        new (): HTMLOntarioIconFacebookElement;
    };
    interface HTMLOntarioIconFacebookAltElement extends Components.OntarioIconFacebookAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconFacebookAltElement: {
        prototype: HTMLOntarioIconFacebookAltElement;
        new (): HTMLOntarioIconFacebookAltElement;
    };
    interface HTMLOntarioIconFavouriteOffElement extends Components.OntarioIconFavouriteOff, HTMLStencilElement {
    }
    var HTMLOntarioIconFavouriteOffElement: {
        prototype: HTMLOntarioIconFavouriteOffElement;
        new (): HTMLOntarioIconFavouriteOffElement;
    };
    interface HTMLOntarioIconFavouriteOnElement extends Components.OntarioIconFavouriteOn, HTMLStencilElement {
    }
    var HTMLOntarioIconFavouriteOnElement: {
        prototype: HTMLOntarioIconFavouriteOnElement;
        new (): HTMLOntarioIconFavouriteOnElement;
    };
    interface HTMLOntarioIconFilterElement extends Components.OntarioIconFilter, HTMLStencilElement {
    }
    var HTMLOntarioIconFilterElement: {
        prototype: HTMLOntarioIconFilterElement;
        new (): HTMLOntarioIconFilterElement;
    };
    interface HTMLOntarioIconFlickrElement extends Components.OntarioIconFlickr, HTMLStencilElement {
    }
    var HTMLOntarioIconFlickrElement: {
        prototype: HTMLOntarioIconFlickrElement;
        new (): HTMLOntarioIconFlickrElement;
    };
    interface HTMLOntarioIconGridElement extends Components.OntarioIconGrid, HTMLStencilElement {
    }
    var HTMLOntarioIconGridElement: {
        prototype: HTMLOntarioIconGridElement;
        new (): HTMLOntarioIconGridElement;
    };
    interface HTMLOntarioIconInstagramElement extends Components.OntarioIconInstagram, HTMLStencilElement {
    }
    var HTMLOntarioIconInstagramElement: {
        prototype: HTMLOntarioIconInstagramElement;
        new (): HTMLOntarioIconInstagramElement;
    };
    interface HTMLOntarioIconInteracEnElement extends Components.OntarioIconInteracEn, HTMLStencilElement {
    }
    var HTMLOntarioIconInteracEnElement: {
        prototype: HTMLOntarioIconInteracEnElement;
        new (): HTMLOntarioIconInteracEnElement;
    };
    interface HTMLOntarioIconInteracEnAltElement extends Components.OntarioIconInteracEnAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconInteracEnAltElement: {
        prototype: HTMLOntarioIconInteracEnAltElement;
        new (): HTMLOntarioIconInteracEnAltElement;
    };
    interface HTMLOntarioIconInteracFrElement extends Components.OntarioIconInteracFr, HTMLStencilElement {
    }
    var HTMLOntarioIconInteracFrElement: {
        prototype: HTMLOntarioIconInteracFrElement;
        new (): HTMLOntarioIconInteracFrElement;
    };
    interface HTMLOntarioIconInteracFrAltElement extends Components.OntarioIconInteracFrAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconInteracFrAltElement: {
        prototype: HTMLOntarioIconInteracFrAltElement;
        new (): HTMLOntarioIconInteracFrAltElement;
    };
    interface HTMLOntarioIconLinkedinElement extends Components.OntarioIconLinkedin, HTMLStencilElement {
    }
    var HTMLOntarioIconLinkedinElement: {
        prototype: HTMLOntarioIconLinkedinElement;
        new (): HTMLOntarioIconLinkedinElement;
    };
    interface HTMLOntarioIconLinkedinAltElement extends Components.OntarioIconLinkedinAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconLinkedinAltElement: {
        prototype: HTMLOntarioIconLinkedinAltElement;
        new (): HTMLOntarioIconLinkedinAltElement;
    };
    interface HTMLOntarioIconListElement extends Components.OntarioIconList, HTMLStencilElement {
    }
    var HTMLOntarioIconListElement: {
        prototype: HTMLOntarioIconListElement;
        new (): HTMLOntarioIconListElement;
    };
    interface HTMLOntarioIconLiveChatElement extends Components.OntarioIconLiveChat, HTMLStencilElement {
    }
    var HTMLOntarioIconLiveChatElement: {
        prototype: HTMLOntarioIconLiveChatElement;
        new (): HTMLOntarioIconLiveChatElement;
    };
    interface HTMLOntarioIconLocationOffElement extends Components.OntarioIconLocationOff, HTMLStencilElement {
    }
    var HTMLOntarioIconLocationOffElement: {
        prototype: HTMLOntarioIconLocationOffElement;
        new (): HTMLOntarioIconLocationOffElement;
    };
    interface HTMLOntarioIconLocationOnElement extends Components.OntarioIconLocationOn, HTMLStencilElement {
    }
    var HTMLOntarioIconLocationOnElement: {
        prototype: HTMLOntarioIconLocationOnElement;
        new (): HTMLOntarioIconLocationOnElement;
    };
    interface HTMLOntarioIconLockOffElement extends Components.OntarioIconLockOff, HTMLStencilElement {
    }
    var HTMLOntarioIconLockOffElement: {
        prototype: HTMLOntarioIconLockOffElement;
        new (): HTMLOntarioIconLockOffElement;
    };
    interface HTMLOntarioIconLockOnElement extends Components.OntarioIconLockOn, HTMLStencilElement {
    }
    var HTMLOntarioIconLockOnElement: {
        prototype: HTMLOntarioIconLockOnElement;
        new (): HTMLOntarioIconLockOnElement;
    };
    interface HTMLOntarioIconMapElement extends Components.OntarioIconMap, HTMLStencilElement {
    }
    var HTMLOntarioIconMapElement: {
        prototype: HTMLOntarioIconMapElement;
        new (): HTMLOntarioIconMapElement;
    };
    interface HTMLOntarioIconMastercardElement extends Components.OntarioIconMastercard, HTMLStencilElement {
    }
    var HTMLOntarioIconMastercardElement: {
        prototype: HTMLOntarioIconMastercardElement;
        new (): HTMLOntarioIconMastercardElement;
    };
    interface HTMLOntarioIconMastercardAltElement extends Components.OntarioIconMastercardAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconMastercardAltElement: {
        prototype: HTMLOntarioIconMastercardAltElement;
        new (): HTMLOntarioIconMastercardAltElement;
    };
    interface HTMLOntarioIconMediaFastForwardElement extends Components.OntarioIconMediaFastForward, HTMLStencilElement {
    }
    var HTMLOntarioIconMediaFastForwardElement: {
        prototype: HTMLOntarioIconMediaFastForwardElement;
        new (): HTMLOntarioIconMediaFastForwardElement;
    };
    interface HTMLOntarioIconMediaFastRewindElement extends Components.OntarioIconMediaFastRewind, HTMLStencilElement {
    }
    var HTMLOntarioIconMediaFastRewindElement: {
        prototype: HTMLOntarioIconMediaFastRewindElement;
        new (): HTMLOntarioIconMediaFastRewindElement;
    };
    interface HTMLOntarioIconMediaPauseElement extends Components.OntarioIconMediaPause, HTMLStencilElement {
    }
    var HTMLOntarioIconMediaPauseElement: {
        prototype: HTMLOntarioIconMediaPauseElement;
        new (): HTMLOntarioIconMediaPauseElement;
    };
    interface HTMLOntarioIconMediaPlayElement extends Components.OntarioIconMediaPlay, HTMLStencilElement {
    }
    var HTMLOntarioIconMediaPlayElement: {
        prototype: HTMLOntarioIconMediaPlayElement;
        new (): HTMLOntarioIconMediaPlayElement;
    };
    interface HTMLOntarioIconMediaStopElement extends Components.OntarioIconMediaStop, HTMLStencilElement {
    }
    var HTMLOntarioIconMediaStopElement: {
        prototype: HTMLOntarioIconMediaStopElement;
        new (): HTMLOntarioIconMediaStopElement;
    };
    interface HTMLOntarioIconMicrophoneOffElement extends Components.OntarioIconMicrophoneOff, HTMLStencilElement {
    }
    var HTMLOntarioIconMicrophoneOffElement: {
        prototype: HTMLOntarioIconMicrophoneOffElement;
        new (): HTMLOntarioIconMicrophoneOffElement;
    };
    interface HTMLOntarioIconMicrophoneOnElement extends Components.OntarioIconMicrophoneOn, HTMLStencilElement {
    }
    var HTMLOntarioIconMicrophoneOnElement: {
        prototype: HTMLOntarioIconMicrophoneOnElement;
        new (): HTMLOntarioIconMicrophoneOnElement;
    };
    interface HTMLOntarioIconMoreVerticalElement extends Components.OntarioIconMoreVertical, HTMLStencilElement {
    }
    var HTMLOntarioIconMoreVerticalElement: {
        prototype: HTMLOntarioIconMoreVerticalElement;
        new (): HTMLOntarioIconMoreVerticalElement;
    };
    interface HTMLOntarioIconNextElement extends Components.OntarioIconNext, HTMLStencilElement {
    }
    var HTMLOntarioIconNextElement: {
        prototype: HTMLOntarioIconNextElement;
        new (): HTMLOntarioIconNextElement;
    };
    interface HTMLOntarioIconNotificationElement extends Components.OntarioIconNotification, HTMLStencilElement {
    }
    var HTMLOntarioIconNotificationElement: {
        prototype: HTMLOntarioIconNotificationElement;
        new (): HTMLOntarioIconNotificationElement;
    };
    interface HTMLOntarioIconPasswordHideElement extends Components.OntarioIconPasswordHide, HTMLStencilElement {
    }
    var HTMLOntarioIconPasswordHideElement: {
        prototype: HTMLOntarioIconPasswordHideElement;
        new (): HTMLOntarioIconPasswordHideElement;
    };
    interface HTMLOntarioIconPasswordShowElement extends Components.OntarioIconPasswordShow, HTMLStencilElement {
    }
    var HTMLOntarioIconPasswordShowElement: {
        prototype: HTMLOntarioIconPasswordShowElement;
        new (): HTMLOntarioIconPasswordShowElement;
    };
    interface HTMLOntarioIconPhotoElement extends Components.OntarioIconPhoto, HTMLStencilElement {
    }
    var HTMLOntarioIconPhotoElement: {
        prototype: HTMLOntarioIconPhotoElement;
        new (): HTMLOntarioIconPhotoElement;
    };
    interface HTMLOntarioIconPinLocationOffElement extends Components.OntarioIconPinLocationOff, HTMLStencilElement {
    }
    var HTMLOntarioIconPinLocationOffElement: {
        prototype: HTMLOntarioIconPinLocationOffElement;
        new (): HTMLOntarioIconPinLocationOffElement;
    };
    interface HTMLOntarioIconPinLocationOnElement extends Components.OntarioIconPinLocationOn, HTMLStencilElement {
    }
    var HTMLOntarioIconPinLocationOnElement: {
        prototype: HTMLOntarioIconPinLocationOnElement;
        new (): HTMLOntarioIconPinLocationOnElement;
    };
    interface HTMLOntarioIconPreviousElement extends Components.OntarioIconPrevious, HTMLStencilElement {
    }
    var HTMLOntarioIconPreviousElement: {
        prototype: HTMLOntarioIconPreviousElement;
        new (): HTMLOntarioIconPreviousElement;
    };
    interface HTMLOntarioIconPrintElement extends Components.OntarioIconPrint, HTMLStencilElement {
    }
    var HTMLOntarioIconPrintElement: {
        prototype: HTMLOntarioIconPrintElement;
        new (): HTMLOntarioIconPrintElement;
    };
    interface HTMLOntarioIconReplayElement extends Components.OntarioIconReplay, HTMLStencilElement {
    }
    var HTMLOntarioIconReplayElement: {
        prototype: HTMLOntarioIconReplayElement;
        new (): HTMLOntarioIconReplayElement;
    };
    interface HTMLOntarioIconRssFeedElement extends Components.OntarioIconRssFeed, HTMLStencilElement {
    }
    var HTMLOntarioIconRssFeedElement: {
        prototype: HTMLOntarioIconRssFeedElement;
        new (): HTMLOntarioIconRssFeedElement;
    };
    interface HTMLOntarioIconSaveElement extends Components.OntarioIconSave, HTMLStencilElement {
    }
    var HTMLOntarioIconSaveElement: {
        prototype: HTMLOntarioIconSaveElement;
        new (): HTMLOntarioIconSaveElement;
    };
    interface HTMLOntarioIconSentiment1Element extends Components.OntarioIconSentiment1, HTMLStencilElement {
    }
    var HTMLOntarioIconSentiment1Element: {
        prototype: HTMLOntarioIconSentiment1Element;
        new (): HTMLOntarioIconSentiment1Element;
    };
    interface HTMLOntarioIconSentiment2Element extends Components.OntarioIconSentiment2, HTMLStencilElement {
    }
    var HTMLOntarioIconSentiment2Element: {
        prototype: HTMLOntarioIconSentiment2Element;
        new (): HTMLOntarioIconSentiment2Element;
    };
    interface HTMLOntarioIconSentiment3Element extends Components.OntarioIconSentiment3, HTMLStencilElement {
    }
    var HTMLOntarioIconSentiment3Element: {
        prototype: HTMLOntarioIconSentiment3Element;
        new (): HTMLOntarioIconSentiment3Element;
    };
    interface HTMLOntarioIconSentiment4Element extends Components.OntarioIconSentiment4, HTMLStencilElement {
    }
    var HTMLOntarioIconSentiment4Element: {
        prototype: HTMLOntarioIconSentiment4Element;
        new (): HTMLOntarioIconSentiment4Element;
    };
    interface HTMLOntarioIconSentiment5Element extends Components.OntarioIconSentiment5, HTMLStencilElement {
    }
    var HTMLOntarioIconSentiment5Element: {
        prototype: HTMLOntarioIconSentiment5Element;
        new (): HTMLOntarioIconSentiment5Element;
    };
    interface HTMLOntarioIconSettingsElement extends Components.OntarioIconSettings, HTMLStencilElement {
    }
    var HTMLOntarioIconSettingsElement: {
        prototype: HTMLOntarioIconSettingsElement;
        new (): HTMLOntarioIconSettingsElement;
    };
    interface HTMLOntarioIconShareElement extends Components.OntarioIconShare, HTMLStencilElement {
    }
    var HTMLOntarioIconShareElement: {
        prototype: HTMLOntarioIconShareElement;
        new (): HTMLOntarioIconShareElement;
    };
    interface HTMLOntarioIconSortElement extends Components.OntarioIconSort, HTMLStencilElement {
    }
    var HTMLOntarioIconSortElement: {
        prototype: HTMLOntarioIconSortElement;
        new (): HTMLOntarioIconSortElement;
    };
    interface HTMLOntarioIconTagElement extends Components.OntarioIconTag, HTMLStencilElement {
    }
    var HTMLOntarioIconTagElement: {
        prototype: HTMLOntarioIconTagElement;
        new (): HTMLOntarioIconTagElement;
    };
    interface HTMLOntarioIconTextMessageElement extends Components.OntarioIconTextMessage, HTMLStencilElement {
    }
    var HTMLOntarioIconTextMessageElement: {
        prototype: HTMLOntarioIconTextMessageElement;
        new (): HTMLOntarioIconTextMessageElement;
    };
    interface HTMLOntarioIconTimerElement extends Components.OntarioIconTimer, HTMLStencilElement {
    }
    var HTMLOntarioIconTimerElement: {
        prototype: HTMLOntarioIconTimerElement;
        new (): HTMLOntarioIconTimerElement;
    };
    interface HTMLOntarioIconTransportBicycleElement extends Components.OntarioIconTransportBicycle, HTMLStencilElement {
    }
    var HTMLOntarioIconTransportBicycleElement: {
        prototype: HTMLOntarioIconTransportBicycleElement;
        new (): HTMLOntarioIconTransportBicycleElement;
    };
    interface HTMLOntarioIconTransportBusElement extends Components.OntarioIconTransportBus, HTMLStencilElement {
    }
    var HTMLOntarioIconTransportBusElement: {
        prototype: HTMLOntarioIconTransportBusElement;
        new (): HTMLOntarioIconTransportBusElement;
    };
    interface HTMLOntarioIconTransportCarElement extends Components.OntarioIconTransportCar, HTMLStencilElement {
    }
    var HTMLOntarioIconTransportCarElement: {
        prototype: HTMLOntarioIconTransportCarElement;
        new (): HTMLOntarioIconTransportCarElement;
    };
    interface HTMLOntarioIconTransportWalkElement extends Components.OntarioIconTransportWalk, HTMLStencilElement {
    }
    var HTMLOntarioIconTransportWalkElement: {
        prototype: HTMLOntarioIconTransportWalkElement;
        new (): HTMLOntarioIconTransportWalkElement;
    };
    interface HTMLOntarioIconTwitterElement extends Components.OntarioIconTwitter, HTMLStencilElement {
    }
    var HTMLOntarioIconTwitterElement: {
        prototype: HTMLOntarioIconTwitterElement;
        new (): HTMLOntarioIconTwitterElement;
    };
    interface HTMLOntarioIconTwitterAltElement extends Components.OntarioIconTwitterAlt, HTMLStencilElement {
    }
    var HTMLOntarioIconTwitterAltElement: {
        prototype: HTMLOntarioIconTwitterAltElement;
        new (): HTMLOntarioIconTwitterAltElement;
    };
    interface HTMLOntarioIconVideoElement extends Components.OntarioIconVideo, HTMLStencilElement {
    }
    var HTMLOntarioIconVideoElement: {
        prototype: HTMLOntarioIconVideoElement;
        new (): HTMLOntarioIconVideoElement;
    };
    interface HTMLOntarioIconVisaElement extends Components.OntarioIconVisa, HTMLStencilElement {
    }
    var HTMLOntarioIconVisaElement: {
        prototype: HTMLOntarioIconVisaElement;
        new (): HTMLOntarioIconVisaElement;
    };
    interface HTMLOntarioIconVoteDislikeElement extends Components.OntarioIconVoteDislike, HTMLStencilElement {
    }
    var HTMLOntarioIconVoteDislikeElement: {
        prototype: HTMLOntarioIconVoteDislikeElement;
        new (): HTMLOntarioIconVoteDislikeElement;
    };
    interface HTMLOntarioIconVoteLikeElement extends Components.OntarioIconVoteLike, HTMLStencilElement {
    }
    var HTMLOntarioIconVoteLikeElement: {
        prototype: HTMLOntarioIconVoteLikeElement;
        new (): HTMLOntarioIconVoteLikeElement;
    };
    interface HTMLOntarioIconVpnKeyElement extends Components.OntarioIconVpnKey, HTMLStencilElement {
    }
    var HTMLOntarioIconVpnKeyElement: {
        prototype: HTMLOntarioIconVpnKeyElement;
        new (): HTMLOntarioIconVpnKeyElement;
    };
    interface HTMLOntarioIconWheelchairElement extends Components.OntarioIconWheelchair, HTMLStencilElement {
    }
    var HTMLOntarioIconWheelchairElement: {
        prototype: HTMLOntarioIconWheelchairElement;
        new (): HTMLOntarioIconWheelchairElement;
    };
    interface HTMLOntarioIconWifiElement extends Components.OntarioIconWifi, HTMLStencilElement {
    }
    var HTMLOntarioIconWifiElement: {
        prototype: HTMLOntarioIconWifiElement;
        new (): HTMLOntarioIconWifiElement;
    };
    interface HTMLOntarioInputElement extends Components.OntarioInput, HTMLStencilElement {
    }
    var HTMLOntarioInputElement: {
        prototype: HTMLOntarioInputElement;
        new (): HTMLOntarioInputElement;
    };
    interface HTMLOntarioLabelElement extends Components.OntarioLabel, HTMLStencilElement {
    }
    var HTMLOntarioLabelElement: {
        prototype: HTMLOntarioLabelElement;
        new (): HTMLOntarioLabelElement;
    };
    interface HTMLOntarioTextareaElement extends Components.OntarioTextarea, HTMLStencilElement {
    }
    var HTMLOntarioTextareaElement: {
        prototype: HTMLOntarioTextareaElement;
        new (): HTMLOntarioTextareaElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "ontario-button": HTMLOntarioButtonElement;
        "ontario-hint-text": HTMLOntarioHintTextElement;
        "ontario-icon-account": HTMLOntarioIconAccountElement;
        "ontario-icon-attach": HTMLOntarioIconAttachElement;
        "ontario-icon-bookmark-off": HTMLOntarioIconBookmarkOffElement;
        "ontario-icon-bookmark-on": HTMLOntarioIconBookmarkOnElement;
        "ontario-icon-calendar": HTMLOntarioIconCalendarElement;
        "ontario-icon-camera": HTMLOntarioIconCameraElement;
        "ontario-icon-clock": HTMLOntarioIconClockElement;
        "ontario-icon-cloud": HTMLOntarioIconCloudElement;
        "ontario-icon-delete": HTMLOntarioIconDeleteElement;
        "ontario-icon-document": HTMLOntarioIconDocumentElement;
        "ontario-icon-download": HTMLOntarioIconDownloadElement;
        "ontario-icon-edit": HTMLOntarioIconEditElement;
        "ontario-icon-export": HTMLOntarioIconExportElement;
        "ontario-icon-facebook": HTMLOntarioIconFacebookElement;
        "ontario-icon-facebook-alt": HTMLOntarioIconFacebookAltElement;
        "ontario-icon-favourite-off": HTMLOntarioIconFavouriteOffElement;
        "ontario-icon-favourite-on": HTMLOntarioIconFavouriteOnElement;
        "ontario-icon-filter": HTMLOntarioIconFilterElement;
        "ontario-icon-flickr": HTMLOntarioIconFlickrElement;
        "ontario-icon-grid": HTMLOntarioIconGridElement;
        "ontario-icon-instagram": HTMLOntarioIconInstagramElement;
        "ontario-icon-interac-en": HTMLOntarioIconInteracEnElement;
        "ontario-icon-interac-en-alt": HTMLOntarioIconInteracEnAltElement;
        "ontario-icon-interac-fr": HTMLOntarioIconInteracFrElement;
        "ontario-icon-interac-fr-alt": HTMLOntarioIconInteracFrAltElement;
        "ontario-icon-linkedin": HTMLOntarioIconLinkedinElement;
        "ontario-icon-linkedin-alt": HTMLOntarioIconLinkedinAltElement;
        "ontario-icon-list": HTMLOntarioIconListElement;
        "ontario-icon-live-chat": HTMLOntarioIconLiveChatElement;
        "ontario-icon-location-off": HTMLOntarioIconLocationOffElement;
        "ontario-icon-location-on": HTMLOntarioIconLocationOnElement;
        "ontario-icon-lock-off": HTMLOntarioIconLockOffElement;
        "ontario-icon-lock-on": HTMLOntarioIconLockOnElement;
        "ontario-icon-map": HTMLOntarioIconMapElement;
        "ontario-icon-mastercard": HTMLOntarioIconMastercardElement;
        "ontario-icon-mastercard-alt": HTMLOntarioIconMastercardAltElement;
        "ontario-icon-media-fast-forward": HTMLOntarioIconMediaFastForwardElement;
        "ontario-icon-media-fast-rewind": HTMLOntarioIconMediaFastRewindElement;
        "ontario-icon-media-pause": HTMLOntarioIconMediaPauseElement;
        "ontario-icon-media-play": HTMLOntarioIconMediaPlayElement;
        "ontario-icon-media-stop": HTMLOntarioIconMediaStopElement;
        "ontario-icon-microphone-off": HTMLOntarioIconMicrophoneOffElement;
        "ontario-icon-microphone-on": HTMLOntarioIconMicrophoneOnElement;
        "ontario-icon-more-vertical": HTMLOntarioIconMoreVerticalElement;
        "ontario-icon-next": HTMLOntarioIconNextElement;
        "ontario-icon-notification": HTMLOntarioIconNotificationElement;
        "ontario-icon-password-hide": HTMLOntarioIconPasswordHideElement;
        "ontario-icon-password-show": HTMLOntarioIconPasswordShowElement;
        "ontario-icon-photo": HTMLOntarioIconPhotoElement;
        "ontario-icon-pin-location-off": HTMLOntarioIconPinLocationOffElement;
        "ontario-icon-pin-location-on": HTMLOntarioIconPinLocationOnElement;
        "ontario-icon-previous": HTMLOntarioIconPreviousElement;
        "ontario-icon-print": HTMLOntarioIconPrintElement;
        "ontario-icon-replay": HTMLOntarioIconReplayElement;
        "ontario-icon-rss-feed": HTMLOntarioIconRssFeedElement;
        "ontario-icon-save": HTMLOntarioIconSaveElement;
        "ontario-icon-sentiment-1": HTMLOntarioIconSentiment1Element;
        "ontario-icon-sentiment-2": HTMLOntarioIconSentiment2Element;
        "ontario-icon-sentiment-3": HTMLOntarioIconSentiment3Element;
        "ontario-icon-sentiment-4": HTMLOntarioIconSentiment4Element;
        "ontario-icon-sentiment-5": HTMLOntarioIconSentiment5Element;
        "ontario-icon-settings": HTMLOntarioIconSettingsElement;
        "ontario-icon-share": HTMLOntarioIconShareElement;
        "ontario-icon-sort": HTMLOntarioIconSortElement;
        "ontario-icon-tag": HTMLOntarioIconTagElement;
        "ontario-icon-text-message": HTMLOntarioIconTextMessageElement;
        "ontario-icon-timer": HTMLOntarioIconTimerElement;
        "ontario-icon-transport-bicycle": HTMLOntarioIconTransportBicycleElement;
        "ontario-icon-transport-bus": HTMLOntarioIconTransportBusElement;
        "ontario-icon-transport-car": HTMLOntarioIconTransportCarElement;
        "ontario-icon-transport-walk": HTMLOntarioIconTransportWalkElement;
        "ontario-icon-twitter": HTMLOntarioIconTwitterElement;
        "ontario-icon-twitter-alt": HTMLOntarioIconTwitterAltElement;
        "ontario-icon-video": HTMLOntarioIconVideoElement;
        "ontario-icon-visa": HTMLOntarioIconVisaElement;
        "ontario-icon-vote-dislike": HTMLOntarioIconVoteDislikeElement;
        "ontario-icon-vote-like": HTMLOntarioIconVoteLikeElement;
        "ontario-icon-vpn-key": HTMLOntarioIconVpnKeyElement;
        "ontario-icon-wheelchair": HTMLOntarioIconWheelchairElement;
        "ontario-icon-wifi": HTMLOntarioIconWifiElement;
        "ontario-input": HTMLOntarioInputElement;
        "ontario-label": HTMLOntarioLabelElement;
        "ontario-textarea": HTMLOntarioTextareaElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface OntarioButton {
        /**
          * Overrides the default value of the `aria-label` HTML attribute.
         */
        "ariaLabel"?: string;
        /**
          * The unique identifier of the button
         */
        "buttonId"?: string;
        /**
          * The native HTML button type the button should use.
         */
        "htmlType"?: 'button' | 'reset' | 'submit';
        /**
          * Text to be displayed within the button. This will override the text provided through the Element Content.
          * @example <ontario-button label="Label Text">Text</ontario-button>  The resulting button will have the label `"Label Text"`.
         */
        "label"?: string;
        /**
          * The type of button to render.
         */
        "type"?: 'primary' | 'secondary' | 'tertiary';
    }
    interface OntarioHintText {
        /**
          * Text to display as the hint text statement.  Setting the hint can be done using the element content or setting the this property.  This property will take precedence.
          * @example <ontario-hint-text hint="Override Hint Text">Hint Text</ontario-button>  The resulting hint text will display `"Override Hint Text"`.
         */
        "hint"?: string;
        /**
          * Used to used to establish a relationship between hint text content and elements using aria-describedby.
         */
        "hintId"?: string;
    }
    interface OntarioIconAccount {
        "color"?: string;
    }
    interface OntarioIconAttach {
        "color"?: string;
    }
    interface OntarioIconBookmarkOff {
        "color"?: string;
    }
    interface OntarioIconBookmarkOn {
        "color"?: string;
    }
    interface OntarioIconCalendar {
        "color"?: string;
    }
    interface OntarioIconCamera {
        "color"?: string;
    }
    interface OntarioIconClock {
        "color"?: string;
    }
    interface OntarioIconCloud {
        "color"?: string;
    }
    interface OntarioIconDelete {
        "color"?: string;
    }
    interface OntarioIconDocument {
        "color"?: string;
    }
    interface OntarioIconDownload {
        "color"?: string;
    }
    interface OntarioIconEdit {
        "color"?: string;
    }
    interface OntarioIconExport {
        "color"?: string;
    }
    interface OntarioIconFacebook {
        "color"?: string;
    }
    interface OntarioIconFacebookAlt {
        "color"?: string;
    }
    interface OntarioIconFavouriteOff {
        "color"?: string;
    }
    interface OntarioIconFavouriteOn {
        "color"?: string;
    }
    interface OntarioIconFilter {
        "color"?: string;
    }
    interface OntarioIconFlickr {
        "color"?: string;
    }
    interface OntarioIconGrid {
        "color"?: string;
    }
    interface OntarioIconInstagram {
        "color"?: string;
    }
    interface OntarioIconInteracEn {
    }
    interface OntarioIconInteracEnAlt {
    }
    interface OntarioIconInteracFr {
    }
    interface OntarioIconInteracFrAlt {
    }
    interface OntarioIconLinkedin {
        "color"?: string;
    }
    interface OntarioIconLinkedinAlt {
        "color"?: string;
    }
    interface OntarioIconList {
        "color"?: string;
    }
    interface OntarioIconLiveChat {
        "color"?: string;
    }
    interface OntarioIconLocationOff {
        "color"?: string;
    }
    interface OntarioIconLocationOn {
        "color"?: string;
    }
    interface OntarioIconLockOff {
        "color"?: string;
    }
    interface OntarioIconLockOn {
        "color"?: string;
    }
    interface OntarioIconMap {
        "color"?: string;
    }
    interface OntarioIconMastercard {
        "color"?: string;
    }
    interface OntarioIconMastercardAlt {
        "color"?: string;
    }
    interface OntarioIconMediaFastForward {
        "color"?: string;
    }
    interface OntarioIconMediaFastRewind {
        "color"?: string;
    }
    interface OntarioIconMediaPause {
        "color"?: string;
    }
    interface OntarioIconMediaPlay {
        "color"?: string;
    }
    interface OntarioIconMediaStop {
        "color"?: string;
    }
    interface OntarioIconMicrophoneOff {
        "color"?: string;
    }
    interface OntarioIconMicrophoneOn {
        "color"?: string;
    }
    interface OntarioIconMoreVertical {
        "color"?: string;
    }
    interface OntarioIconNext {
        "color"?: string;
    }
    interface OntarioIconNotification {
        "color"?: string;
    }
    interface OntarioIconPasswordHide {
        "color"?: string;
    }
    interface OntarioIconPasswordShow {
        "color"?: string;
    }
    interface OntarioIconPhoto {
        "color"?: string;
    }
    interface OntarioIconPinLocationOff {
        "color"?: string;
    }
    interface OntarioIconPinLocationOn {
        "color"?: string;
    }
    interface OntarioIconPrevious {
        "color"?: string;
    }
    interface OntarioIconPrint {
        "color"?: string;
    }
    interface OntarioIconReplay {
        "color"?: string;
    }
    interface OntarioIconRssFeed {
        "color"?: string;
    }
    interface OntarioIconSave {
        "color"?: string;
    }
    interface OntarioIconSentiment1 {
        "color"?: string;
    }
    interface OntarioIconSentiment2 {
        "color"?: string;
    }
    interface OntarioIconSentiment3 {
        "color"?: string;
    }
    interface OntarioIconSentiment4 {
        "color"?: string;
    }
    interface OntarioIconSentiment5 {
        "color"?: string;
    }
    interface OntarioIconSettings {
        "color"?: string;
    }
    interface OntarioIconShare {
        "color"?: string;
    }
    interface OntarioIconSort {
        "color"?: string;
    }
    interface OntarioIconTag {
        "color"?: string;
    }
    interface OntarioIconTextMessage {
        "color"?: string;
    }
    interface OntarioIconTimer {
        "color"?: string;
    }
    interface OntarioIconTransportBicycle {
        "color"?: string;
    }
    interface OntarioIconTransportBus {
        "color"?: string;
    }
    interface OntarioIconTransportCar {
        "color"?: string;
    }
    interface OntarioIconTransportWalk {
        "color"?: string;
    }
    interface OntarioIconTwitter {
        "color"?: string;
    }
    interface OntarioIconTwitterAlt {
        "color"?: string;
    }
    interface OntarioIconVideo {
        "color"?: string;
    }
    interface OntarioIconVisa {
    }
    interface OntarioIconVoteDislike {
        "color"?: string;
    }
    interface OntarioIconVoteLike {
        "color"?: string;
    }
    interface OntarioIconVpnKey {
        "color"?: string;
    }
    interface OntarioIconWheelchair {
        "color"?: string;
    }
    interface OntarioIconWifi {
        "color"?: string;
    }
    interface OntarioInput {
        /**
          * The aria-describedBy value if the input has hint text associated with it.
         */
        "describedBy"?: string;
        /**
          * The unique identifier of the input. If no ID is passed, one will be autogenerated.
         */
        "inputId"?: string;
        /**
          * The width of the input field. If no value is assigned, it will present as the default input width.
         */
        "inputWidth"?: '2-char-width' | '3-char-width' | '4-char-width' | '5-char-width' | '7-char-width' | '10-char-width' | '20-char-width' | 'default';
        /**
          * The name assigned to the input.The name value is used to reference form data after a form is submitted.
         */
        "name"?: string;
        /**
          * Emitted when the input loses focus.
         */
        "onBlurEvent"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when a keyboard input occurred.
         */
        "onChangeEvent"?: (event: CustomEvent<KeyboardEvent>) => void;
        /**
          * Emitted when the input gains focus.
         */
        "onFocusEvent"?: (event: CustomEvent<void>) => void;
        /**
          * Used to define whether the input field is required or not. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The input type value.
         */
        "type"?: 'text' | 'tel' | 'email' | 'password';
        /**
          * The input content value.
         */
        "value"?: string;
    }
    interface OntarioLabel {
        /**
          * The text to display as label. This will override the text provided through the Element Content.
          * @example <ontario-label caption="Comments" for"comments">Feedback</ontario-label>  The resulting label will show `"Comments"`.
         */
        "caption"?: string;
        /**
          * The form control with which the caption is associated.
         */
        "for"?: string;
        /**
          * Defines whether the input field is required. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The type of label to render.
         */
        "type"?: 'default' | 'large' | 'heading';
    }
    interface OntarioTextarea {
        /**
          * The aria-describedBy value if the textarea has hint text associated with it.
         */
        "describedBy"?: string;
        /**
          * The name assigned to the textarea. The name value is used to reference form data after a form is submitted.
         */
        "name"?: string;
        /**
          * Emitted when the input loses focus.
         */
        "onBlurEvent"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when a keyboard input occurred.
         */
        "onChangeEvent"?: (event: CustomEvent<KeyboardEvent>) => void;
        /**
          * Emitted when the input gains focus.
         */
        "onFocusEvent"?: (event: CustomEvent<void>) => void;
        /**
          * Used to define whether the textarea field is required or not. If required, the value passed should be 'required'.
         */
        "required"?: boolean;
        /**
          * The unique identifier of the textarea. If no ID is passed, one will be autogenerated.
         */
        "textareaId"?: string;
        /**
          * The textarea content value.
         */
        "value"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "ontario-button": OntarioButton;
        "ontario-hint-text": OntarioHintText;
        "ontario-icon-account": OntarioIconAccount;
        "ontario-icon-attach": OntarioIconAttach;
        "ontario-icon-bookmark-off": OntarioIconBookmarkOff;
        "ontario-icon-bookmark-on": OntarioIconBookmarkOn;
        "ontario-icon-calendar": OntarioIconCalendar;
        "ontario-icon-camera": OntarioIconCamera;
        "ontario-icon-clock": OntarioIconClock;
        "ontario-icon-cloud": OntarioIconCloud;
        "ontario-icon-delete": OntarioIconDelete;
        "ontario-icon-document": OntarioIconDocument;
        "ontario-icon-download": OntarioIconDownload;
        "ontario-icon-edit": OntarioIconEdit;
        "ontario-icon-export": OntarioIconExport;
        "ontario-icon-facebook": OntarioIconFacebook;
        "ontario-icon-facebook-alt": OntarioIconFacebookAlt;
        "ontario-icon-favourite-off": OntarioIconFavouriteOff;
        "ontario-icon-favourite-on": OntarioIconFavouriteOn;
        "ontario-icon-filter": OntarioIconFilter;
        "ontario-icon-flickr": OntarioIconFlickr;
        "ontario-icon-grid": OntarioIconGrid;
        "ontario-icon-instagram": OntarioIconInstagram;
        "ontario-icon-interac-en": OntarioIconInteracEn;
        "ontario-icon-interac-en-alt": OntarioIconInteracEnAlt;
        "ontario-icon-interac-fr": OntarioIconInteracFr;
        "ontario-icon-interac-fr-alt": OntarioIconInteracFrAlt;
        "ontario-icon-linkedin": OntarioIconLinkedin;
        "ontario-icon-linkedin-alt": OntarioIconLinkedinAlt;
        "ontario-icon-list": OntarioIconList;
        "ontario-icon-live-chat": OntarioIconLiveChat;
        "ontario-icon-location-off": OntarioIconLocationOff;
        "ontario-icon-location-on": OntarioIconLocationOn;
        "ontario-icon-lock-off": OntarioIconLockOff;
        "ontario-icon-lock-on": OntarioIconLockOn;
        "ontario-icon-map": OntarioIconMap;
        "ontario-icon-mastercard": OntarioIconMastercard;
        "ontario-icon-mastercard-alt": OntarioIconMastercardAlt;
        "ontario-icon-media-fast-forward": OntarioIconMediaFastForward;
        "ontario-icon-media-fast-rewind": OntarioIconMediaFastRewind;
        "ontario-icon-media-pause": OntarioIconMediaPause;
        "ontario-icon-media-play": OntarioIconMediaPlay;
        "ontario-icon-media-stop": OntarioIconMediaStop;
        "ontario-icon-microphone-off": OntarioIconMicrophoneOff;
        "ontario-icon-microphone-on": OntarioIconMicrophoneOn;
        "ontario-icon-more-vertical": OntarioIconMoreVertical;
        "ontario-icon-next": OntarioIconNext;
        "ontario-icon-notification": OntarioIconNotification;
        "ontario-icon-password-hide": OntarioIconPasswordHide;
        "ontario-icon-password-show": OntarioIconPasswordShow;
        "ontario-icon-photo": OntarioIconPhoto;
        "ontario-icon-pin-location-off": OntarioIconPinLocationOff;
        "ontario-icon-pin-location-on": OntarioIconPinLocationOn;
        "ontario-icon-previous": OntarioIconPrevious;
        "ontario-icon-print": OntarioIconPrint;
        "ontario-icon-replay": OntarioIconReplay;
        "ontario-icon-rss-feed": OntarioIconRssFeed;
        "ontario-icon-save": OntarioIconSave;
        "ontario-icon-sentiment-1": OntarioIconSentiment1;
        "ontario-icon-sentiment-2": OntarioIconSentiment2;
        "ontario-icon-sentiment-3": OntarioIconSentiment3;
        "ontario-icon-sentiment-4": OntarioIconSentiment4;
        "ontario-icon-sentiment-5": OntarioIconSentiment5;
        "ontario-icon-settings": OntarioIconSettings;
        "ontario-icon-share": OntarioIconShare;
        "ontario-icon-sort": OntarioIconSort;
        "ontario-icon-tag": OntarioIconTag;
        "ontario-icon-text-message": OntarioIconTextMessage;
        "ontario-icon-timer": OntarioIconTimer;
        "ontario-icon-transport-bicycle": OntarioIconTransportBicycle;
        "ontario-icon-transport-bus": OntarioIconTransportBus;
        "ontario-icon-transport-car": OntarioIconTransportCar;
        "ontario-icon-transport-walk": OntarioIconTransportWalk;
        "ontario-icon-twitter": OntarioIconTwitter;
        "ontario-icon-twitter-alt": OntarioIconTwitterAlt;
        "ontario-icon-video": OntarioIconVideo;
        "ontario-icon-visa": OntarioIconVisa;
        "ontario-icon-vote-dislike": OntarioIconVoteDislike;
        "ontario-icon-vote-like": OntarioIconVoteLike;
        "ontario-icon-vpn-key": OntarioIconVpnKey;
        "ontario-icon-wheelchair": OntarioIconWheelchair;
        "ontario-icon-wifi": OntarioIconWifi;
        "ontario-input": OntarioInput;
        "ontario-label": OntarioLabel;
        "ontario-textarea": OntarioTextarea;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "ontario-button": LocalJSX.OntarioButton & JSXBase.HTMLAttributes<HTMLOntarioButtonElement>;
            "ontario-hint-text": LocalJSX.OntarioHintText & JSXBase.HTMLAttributes<HTMLOntarioHintTextElement>;
            "ontario-icon-account": LocalJSX.OntarioIconAccount & JSXBase.HTMLAttributes<HTMLOntarioIconAccountElement>;
            "ontario-icon-attach": LocalJSX.OntarioIconAttach & JSXBase.HTMLAttributes<HTMLOntarioIconAttachElement>;
            "ontario-icon-bookmark-off": LocalJSX.OntarioIconBookmarkOff & JSXBase.HTMLAttributes<HTMLOntarioIconBookmarkOffElement>;
            "ontario-icon-bookmark-on": LocalJSX.OntarioIconBookmarkOn & JSXBase.HTMLAttributes<HTMLOntarioIconBookmarkOnElement>;
            "ontario-icon-calendar": LocalJSX.OntarioIconCalendar & JSXBase.HTMLAttributes<HTMLOntarioIconCalendarElement>;
            "ontario-icon-camera": LocalJSX.OntarioIconCamera & JSXBase.HTMLAttributes<HTMLOntarioIconCameraElement>;
            "ontario-icon-clock": LocalJSX.OntarioIconClock & JSXBase.HTMLAttributes<HTMLOntarioIconClockElement>;
            "ontario-icon-cloud": LocalJSX.OntarioIconCloud & JSXBase.HTMLAttributes<HTMLOntarioIconCloudElement>;
            "ontario-icon-delete": LocalJSX.OntarioIconDelete & JSXBase.HTMLAttributes<HTMLOntarioIconDeleteElement>;
            "ontario-icon-document": LocalJSX.OntarioIconDocument & JSXBase.HTMLAttributes<HTMLOntarioIconDocumentElement>;
            "ontario-icon-download": LocalJSX.OntarioIconDownload & JSXBase.HTMLAttributes<HTMLOntarioIconDownloadElement>;
            "ontario-icon-edit": LocalJSX.OntarioIconEdit & JSXBase.HTMLAttributes<HTMLOntarioIconEditElement>;
            "ontario-icon-export": LocalJSX.OntarioIconExport & JSXBase.HTMLAttributes<HTMLOntarioIconExportElement>;
            "ontario-icon-facebook": LocalJSX.OntarioIconFacebook & JSXBase.HTMLAttributes<HTMLOntarioIconFacebookElement>;
            "ontario-icon-facebook-alt": LocalJSX.OntarioIconFacebookAlt & JSXBase.HTMLAttributes<HTMLOntarioIconFacebookAltElement>;
            "ontario-icon-favourite-off": LocalJSX.OntarioIconFavouriteOff & JSXBase.HTMLAttributes<HTMLOntarioIconFavouriteOffElement>;
            "ontario-icon-favourite-on": LocalJSX.OntarioIconFavouriteOn & JSXBase.HTMLAttributes<HTMLOntarioIconFavouriteOnElement>;
            "ontario-icon-filter": LocalJSX.OntarioIconFilter & JSXBase.HTMLAttributes<HTMLOntarioIconFilterElement>;
            "ontario-icon-flickr": LocalJSX.OntarioIconFlickr & JSXBase.HTMLAttributes<HTMLOntarioIconFlickrElement>;
            "ontario-icon-grid": LocalJSX.OntarioIconGrid & JSXBase.HTMLAttributes<HTMLOntarioIconGridElement>;
            "ontario-icon-instagram": LocalJSX.OntarioIconInstagram & JSXBase.HTMLAttributes<HTMLOntarioIconInstagramElement>;
            "ontario-icon-interac-en": LocalJSX.OntarioIconInteracEn & JSXBase.HTMLAttributes<HTMLOntarioIconInteracEnElement>;
            "ontario-icon-interac-en-alt": LocalJSX.OntarioIconInteracEnAlt & JSXBase.HTMLAttributes<HTMLOntarioIconInteracEnAltElement>;
            "ontario-icon-interac-fr": LocalJSX.OntarioIconInteracFr & JSXBase.HTMLAttributes<HTMLOntarioIconInteracFrElement>;
            "ontario-icon-interac-fr-alt": LocalJSX.OntarioIconInteracFrAlt & JSXBase.HTMLAttributes<HTMLOntarioIconInteracFrAltElement>;
            "ontario-icon-linkedin": LocalJSX.OntarioIconLinkedin & JSXBase.HTMLAttributes<HTMLOntarioIconLinkedinElement>;
            "ontario-icon-linkedin-alt": LocalJSX.OntarioIconLinkedinAlt & JSXBase.HTMLAttributes<HTMLOntarioIconLinkedinAltElement>;
            "ontario-icon-list": LocalJSX.OntarioIconList & JSXBase.HTMLAttributes<HTMLOntarioIconListElement>;
            "ontario-icon-live-chat": LocalJSX.OntarioIconLiveChat & JSXBase.HTMLAttributes<HTMLOntarioIconLiveChatElement>;
            "ontario-icon-location-off": LocalJSX.OntarioIconLocationOff & JSXBase.HTMLAttributes<HTMLOntarioIconLocationOffElement>;
            "ontario-icon-location-on": LocalJSX.OntarioIconLocationOn & JSXBase.HTMLAttributes<HTMLOntarioIconLocationOnElement>;
            "ontario-icon-lock-off": LocalJSX.OntarioIconLockOff & JSXBase.HTMLAttributes<HTMLOntarioIconLockOffElement>;
            "ontario-icon-lock-on": LocalJSX.OntarioIconLockOn & JSXBase.HTMLAttributes<HTMLOntarioIconLockOnElement>;
            "ontario-icon-map": LocalJSX.OntarioIconMap & JSXBase.HTMLAttributes<HTMLOntarioIconMapElement>;
            "ontario-icon-mastercard": LocalJSX.OntarioIconMastercard & JSXBase.HTMLAttributes<HTMLOntarioIconMastercardElement>;
            "ontario-icon-mastercard-alt": LocalJSX.OntarioIconMastercardAlt & JSXBase.HTMLAttributes<HTMLOntarioIconMastercardAltElement>;
            "ontario-icon-media-fast-forward": LocalJSX.OntarioIconMediaFastForward & JSXBase.HTMLAttributes<HTMLOntarioIconMediaFastForwardElement>;
            "ontario-icon-media-fast-rewind": LocalJSX.OntarioIconMediaFastRewind & JSXBase.HTMLAttributes<HTMLOntarioIconMediaFastRewindElement>;
            "ontario-icon-media-pause": LocalJSX.OntarioIconMediaPause & JSXBase.HTMLAttributes<HTMLOntarioIconMediaPauseElement>;
            "ontario-icon-media-play": LocalJSX.OntarioIconMediaPlay & JSXBase.HTMLAttributes<HTMLOntarioIconMediaPlayElement>;
            "ontario-icon-media-stop": LocalJSX.OntarioIconMediaStop & JSXBase.HTMLAttributes<HTMLOntarioIconMediaStopElement>;
            "ontario-icon-microphone-off": LocalJSX.OntarioIconMicrophoneOff & JSXBase.HTMLAttributes<HTMLOntarioIconMicrophoneOffElement>;
            "ontario-icon-microphone-on": LocalJSX.OntarioIconMicrophoneOn & JSXBase.HTMLAttributes<HTMLOntarioIconMicrophoneOnElement>;
            "ontario-icon-more-vertical": LocalJSX.OntarioIconMoreVertical & JSXBase.HTMLAttributes<HTMLOntarioIconMoreVerticalElement>;
            "ontario-icon-next": LocalJSX.OntarioIconNext & JSXBase.HTMLAttributes<HTMLOntarioIconNextElement>;
            "ontario-icon-notification": LocalJSX.OntarioIconNotification & JSXBase.HTMLAttributes<HTMLOntarioIconNotificationElement>;
            "ontario-icon-password-hide": LocalJSX.OntarioIconPasswordHide & JSXBase.HTMLAttributes<HTMLOntarioIconPasswordHideElement>;
            "ontario-icon-password-show": LocalJSX.OntarioIconPasswordShow & JSXBase.HTMLAttributes<HTMLOntarioIconPasswordShowElement>;
            "ontario-icon-photo": LocalJSX.OntarioIconPhoto & JSXBase.HTMLAttributes<HTMLOntarioIconPhotoElement>;
            "ontario-icon-pin-location-off": LocalJSX.OntarioIconPinLocationOff & JSXBase.HTMLAttributes<HTMLOntarioIconPinLocationOffElement>;
            "ontario-icon-pin-location-on": LocalJSX.OntarioIconPinLocationOn & JSXBase.HTMLAttributes<HTMLOntarioIconPinLocationOnElement>;
            "ontario-icon-previous": LocalJSX.OntarioIconPrevious & JSXBase.HTMLAttributes<HTMLOntarioIconPreviousElement>;
            "ontario-icon-print": LocalJSX.OntarioIconPrint & JSXBase.HTMLAttributes<HTMLOntarioIconPrintElement>;
            "ontario-icon-replay": LocalJSX.OntarioIconReplay & JSXBase.HTMLAttributes<HTMLOntarioIconReplayElement>;
            "ontario-icon-rss-feed": LocalJSX.OntarioIconRssFeed & JSXBase.HTMLAttributes<HTMLOntarioIconRssFeedElement>;
            "ontario-icon-save": LocalJSX.OntarioIconSave & JSXBase.HTMLAttributes<HTMLOntarioIconSaveElement>;
            "ontario-icon-sentiment-1": LocalJSX.OntarioIconSentiment1 & JSXBase.HTMLAttributes<HTMLOntarioIconSentiment1Element>;
            "ontario-icon-sentiment-2": LocalJSX.OntarioIconSentiment2 & JSXBase.HTMLAttributes<HTMLOntarioIconSentiment2Element>;
            "ontario-icon-sentiment-3": LocalJSX.OntarioIconSentiment3 & JSXBase.HTMLAttributes<HTMLOntarioIconSentiment3Element>;
            "ontario-icon-sentiment-4": LocalJSX.OntarioIconSentiment4 & JSXBase.HTMLAttributes<HTMLOntarioIconSentiment4Element>;
            "ontario-icon-sentiment-5": LocalJSX.OntarioIconSentiment5 & JSXBase.HTMLAttributes<HTMLOntarioIconSentiment5Element>;
            "ontario-icon-settings": LocalJSX.OntarioIconSettings & JSXBase.HTMLAttributes<HTMLOntarioIconSettingsElement>;
            "ontario-icon-share": LocalJSX.OntarioIconShare & JSXBase.HTMLAttributes<HTMLOntarioIconShareElement>;
            "ontario-icon-sort": LocalJSX.OntarioIconSort & JSXBase.HTMLAttributes<HTMLOntarioIconSortElement>;
            "ontario-icon-tag": LocalJSX.OntarioIconTag & JSXBase.HTMLAttributes<HTMLOntarioIconTagElement>;
            "ontario-icon-text-message": LocalJSX.OntarioIconTextMessage & JSXBase.HTMLAttributes<HTMLOntarioIconTextMessageElement>;
            "ontario-icon-timer": LocalJSX.OntarioIconTimer & JSXBase.HTMLAttributes<HTMLOntarioIconTimerElement>;
            "ontario-icon-transport-bicycle": LocalJSX.OntarioIconTransportBicycle & JSXBase.HTMLAttributes<HTMLOntarioIconTransportBicycleElement>;
            "ontario-icon-transport-bus": LocalJSX.OntarioIconTransportBus & JSXBase.HTMLAttributes<HTMLOntarioIconTransportBusElement>;
            "ontario-icon-transport-car": LocalJSX.OntarioIconTransportCar & JSXBase.HTMLAttributes<HTMLOntarioIconTransportCarElement>;
            "ontario-icon-transport-walk": LocalJSX.OntarioIconTransportWalk & JSXBase.HTMLAttributes<HTMLOntarioIconTransportWalkElement>;
            "ontario-icon-twitter": LocalJSX.OntarioIconTwitter & JSXBase.HTMLAttributes<HTMLOntarioIconTwitterElement>;
            "ontario-icon-twitter-alt": LocalJSX.OntarioIconTwitterAlt & JSXBase.HTMLAttributes<HTMLOntarioIconTwitterAltElement>;
            "ontario-icon-video": LocalJSX.OntarioIconVideo & JSXBase.HTMLAttributes<HTMLOntarioIconVideoElement>;
            "ontario-icon-visa": LocalJSX.OntarioIconVisa & JSXBase.HTMLAttributes<HTMLOntarioIconVisaElement>;
            "ontario-icon-vote-dislike": LocalJSX.OntarioIconVoteDislike & JSXBase.HTMLAttributes<HTMLOntarioIconVoteDislikeElement>;
            "ontario-icon-vote-like": LocalJSX.OntarioIconVoteLike & JSXBase.HTMLAttributes<HTMLOntarioIconVoteLikeElement>;
            "ontario-icon-vpn-key": LocalJSX.OntarioIconVpnKey & JSXBase.HTMLAttributes<HTMLOntarioIconVpnKeyElement>;
            "ontario-icon-wheelchair": LocalJSX.OntarioIconWheelchair & JSXBase.HTMLAttributes<HTMLOntarioIconWheelchairElement>;
            "ontario-icon-wifi": LocalJSX.OntarioIconWifi & JSXBase.HTMLAttributes<HTMLOntarioIconWifiElement>;
            "ontario-input": LocalJSX.OntarioInput & JSXBase.HTMLAttributes<HTMLOntarioInputElement>;
            "ontario-label": LocalJSX.OntarioLabel & JSXBase.HTMLAttributes<HTMLOntarioLabelElement>;
            "ontario-textarea": LocalJSX.OntarioTextarea & JSXBase.HTMLAttributes<HTMLOntarioTextareaElement>;
        }
    }
}
